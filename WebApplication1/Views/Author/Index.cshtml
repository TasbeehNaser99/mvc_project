@using WebApplication1.ViewModel
@model List<AuthorVM>
@section Title {
    Authores
}
@section SubTitle {
show
}
@section button {
    <a class="btn btn-primary" asp-action="Create" asp-controller="Author">Create</a>
}



@if (!Model.Any())
{
    <div class="card-body">
        <div class="alert alert-warning alert-dismissible">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
            <h5><i class="icon fas fa-exclamation-triangle"></i> Alert!</h5>
            no categories found
        </div>
    </div>
}
else
{
    <div class="card-body">
        <h2>All Authores</h2>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th style="width: 10px">#</th>
                    <th>Name</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var author in @Model)
                {
                    <tr>
                        <td>@author.Id</td>
                        <td>@author.Name</td>
                        <td>
                            <a asp-action="Edit" asp-controller="Author" asp-route-id="@author.Id" class="btn btn-outline-warning">Edit</a>
                            <a asp-action="Details" asp-controller="Author" asp-route-id="@author.Id" class="btn btn-outline-info">Details</a>
                            <a data-id="@author.Id" class="btn js-delete btn-outline-danger">Delete</a>
                        </td>

                    </tr>
                }
            </tbody>

        </table>
    </div>
}
@section Scripts {
    <script>
        document.querySelectorAll(".js-delete").forEach((btn) => {
            btn.addEventListener("click", async () => {
                Swal.fire({
                    title: "Are you sure?",
                    text: "You won't be able to revert this!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Yes, delete it!"
                }).then(async (result) => {
                    if (result.isConfirmed) {
                        const id = btn.dataset.id;
                        const response = await fetch(`/Author/Delete/${id}`, { method: 'POST' });
                        if (response.ok) {
                            btn.closest("tr").remove();
                            const Toast = Swal.mixin({
                                toast: true,
                                position: 'top-right',
                                iconColor: 'white',
                                customClass: {
                                    popup: 'colored-toast',
                                },
                                showConfirmButton: false,
                                timer: 1500,
                                timerProgressBar: true,
                            });
                            Toast.fire({
                                icon: 'success',
                                title: 'Success',
                            });
                        } else {
                           
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'There was an error deleting the category.',
                            });
                        }
                    }
                });
            });
        });

    </script>
}

